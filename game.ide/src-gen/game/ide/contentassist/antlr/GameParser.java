/*
 * generated by Xtext 2.23.0
 */
package game.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import game.ide.contentassist.antlr.internal.InternalGameParser;
import game.services.GameGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class GameParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(GameGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, GameGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getElementsJeuAccess().getAlternatives(), "rule__ElementsJeu__Alternatives");
			builder.put(grammarAccess.getPlaceAccess().getAlternatives(), "rule__Place__Alternatives");
			builder.put(grammarAccess.getAvantageAccess().getAlternatives(), "rule__Avantage__Alternatives");
			builder.put(grammarAccess.getNatureAccess().getAlternatives(), "rule__Nature__Alternatives");
			builder.put(grammarAccess.getJeuAccess().getGroup(), "rule__Jeu__Group__0");
			builder.put(grammarAccess.getTerritoireAccess().getGroup(), "rule__Territoire__Group__0");
			builder.put(grammarAccess.getLieuAccess().getGroup(), "rule__Lieu__Group__0");
			builder.put(grammarAccess.getCheminAccess().getGroup(), "rule__Chemin__Group__0");
			builder.put(grammarAccess.getPersonneAccess().getGroup(), "rule__Personne__Group__0");
			builder.put(grammarAccess.getExplorateurAccess().getGroup(), "rule__Explorateur__Group__0");
			builder.put(grammarAccess.getConnaissanceAccess().getGroup(), "rule__Connaissance__Group__0");
			builder.put(grammarAccess.getObjetAccess().getGroup(), "rule__Objet__Group__0");
			builder.put(grammarAccess.getInteractionAccess().getGroup(), "rule__Interaction__Group__0");
			builder.put(grammarAccess.getChoixAccess().getGroup(), "rule__Choix__Group__0");
			builder.put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
			builder.put(grammarAccess.getRecompenseAccess().getGroup(), "rule__Recompense__Group__0");
			builder.put(grammarAccess.getJeuAccess().getNomAssignment_1(), "rule__Jeu__NomAssignment_1");
			builder.put(grammarAccess.getJeuAccess().getTerritoireAssignment_3(), "rule__Jeu__TerritoireAssignment_3");
			builder.put(grammarAccess.getJeuAccess().getExplorateurAssignment_4(), "rule__Jeu__ExplorateurAssignment_4");
			builder.put(grammarAccess.getJeuAccess().getElementsjeuAssignment_5(), "rule__Jeu__ElementsjeuAssignment_5");
			builder.put(grammarAccess.getTerritoireAccess().getPlacesAssignment_2(), "rule__Territoire__PlacesAssignment_2");
			builder.put(grammarAccess.getLieuAccess().getNomAssignment_1(), "rule__Lieu__NomAssignment_1");
			builder.put(grammarAccess.getLieuAccess().getNatureAssignment_3(), "rule__Lieu__NatureAssignment_3");
			builder.put(grammarAccess.getCheminAccess().getPredAssignment_3(), "rule__Chemin__PredAssignment_3");
			builder.put(grammarAccess.getCheminAccess().getSuccAssignment_5(), "rule__Chemin__SuccAssignment_5");
			builder.put(grammarAccess.getCheminAccess().getVisibleAssignment_7(), "rule__Chemin__VisibleAssignment_7");
			builder.put(grammarAccess.getCheminAccess().getObligatoireAssignment_9(), "rule__Chemin__ObligatoireAssignment_9");
			builder.put(grammarAccess.getCheminAccess().getOuvertAssignment_11(), "rule__Chemin__OuvertAssignment_11");
			builder.put(grammarAccess.getPersonneAccess().getNomAssignment_1(), "rule__Personne__NomAssignment_1");
			builder.put(grammarAccess.getPersonneAccess().getVisibleAssignment_4(), "rule__Personne__VisibleAssignment_4");
			builder.put(grammarAccess.getPersonneAccess().getActifAssignment_6(), "rule__Personne__ActifAssignment_6");
			builder.put(grammarAccess.getPersonneAccess().getObligatoireAssignment_8(), "rule__Personne__ObligatoireAssignment_8");
			builder.put(grammarAccess.getPersonneAccess().getInteractionsAssignment_10(), "rule__Personne__InteractionsAssignment_10");
			builder.put(grammarAccess.getExplorateurAccess().getPlaceAssignment_3(), "rule__Explorateur__PlaceAssignment_3");
			builder.put(grammarAccess.getExplorateurAccess().getTailleDispoAssignment_6(), "rule__Explorateur__TailleDispoAssignment_6");
			builder.put(grammarAccess.getExplorateurAccess().getObjetsAssignment_9(), "rule__Explorateur__ObjetsAssignment_9");
			builder.put(grammarAccess.getExplorateurAccess().getConnaissancesAssignment_12(), "rule__Explorateur__ConnaissancesAssignment_12");
			builder.put(grammarAccess.getConnaissanceAccess().getVisibleAssignment_3(), "rule__Connaissance__VisibleAssignment_3");
			builder.put(grammarAccess.getConnaissanceAccess().getActifAssignment_5(), "rule__Connaissance__ActifAssignment_5");
			builder.put(grammarAccess.getObjetAccess().getVisibleAssignment_3(), "rule__Objet__VisibleAssignment_3");
			builder.put(grammarAccess.getObjetAccess().getActifAssignment_5(), "rule__Objet__ActifAssignment_5");
			builder.put(grammarAccess.getObjetAccess().getQteAssignment_7(), "rule__Objet__QteAssignment_7");
			builder.put(grammarAccess.getObjetAccess().getTailleAssignment_9(), "rule__Objet__TailleAssignment_9");
			builder.put(grammarAccess.getObjetAccess().getTransformableAssignment_11(), "rule__Objet__TransformableAssignment_11");
			builder.put(grammarAccess.getInteractionAccess().getQuestionAssignment_3(), "rule__Interaction__QuestionAssignment_3");
			builder.put(grammarAccess.getInteractionAccess().getChoixAssignment_5(), "rule__Interaction__ChoixAssignment_5");
			builder.put(grammarAccess.getChoixAccess().getNumeroAssignment_1(), "rule__Choix__NumeroAssignment_1");
			builder.put(grammarAccess.getChoixAccess().getReponseAssignment_4(), "rule__Choix__ReponseAssignment_4");
			builder.put(grammarAccess.getChoixAccess().getRecompenseAssignment_6(), "rule__Choix__RecompenseAssignment_6");
			builder.put(grammarAccess.getConditionAccess().getConnaissancesRequisesAssignment_4(), "rule__Condition__ConnaissancesRequisesAssignment_4");
			builder.put(grammarAccess.getConditionAccess().getObjetsRequisAssignment_7(), "rule__Condition__ObjetsRequisAssignment_7");
			builder.put(grammarAccess.getRecompenseAccess().getAvantageAssignment_3(), "rule__Recompense__AvantageAssignment_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private GameGrammarAccess grammarAccess;

	@Override
	protected InternalGameParser createParser() {
		InternalGameParser result = new InternalGameParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public GameGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GameGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
