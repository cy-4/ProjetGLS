/**
 * generated by Xtext 2.23.0
 */
package game.game.impl;

import game.game.Avantage;
import game.game.Choix;
import game.game.GamePackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Choix</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link game.game.impl.ChoixImpl#getNumero <em>Numero</em>}</li>
 *   <li>{@link game.game.impl.ChoixImpl#getReponse <em>Reponse</em>}</li>
 *   <li>{@link game.game.impl.ChoixImpl#getQte <em>Qte</em>}</li>
 *   <li>{@link game.game.impl.ChoixImpl#getAvantage <em>Avantage</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ChoixImpl extends MinimalEObjectImpl.Container implements Choix
{
  /**
   * The default value of the '{@link #getNumero() <em>Numero</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumero()
   * @generated
   * @ordered
   */
  protected static final int NUMERO_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNumero() <em>Numero</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumero()
   * @generated
   * @ordered
   */
  protected int numero = NUMERO_EDEFAULT;

  /**
   * The default value of the '{@link #getReponse() <em>Reponse</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReponse()
   * @generated
   * @ordered
   */
  protected static final String REPONSE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReponse() <em>Reponse</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReponse()
   * @generated
   * @ordered
   */
  protected String reponse = REPONSE_EDEFAULT;

  /**
   * The cached value of the '{@link #getQte() <em>Qte</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQte()
   * @generated
   * @ordered
   */
  protected EList<Integer> qte;

  /**
   * The cached value of the '{@link #getAvantage() <em>Avantage</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAvantage()
   * @generated
   * @ordered
   */
  protected EList<Avantage> avantage;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ChoixImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.CHOIX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNumero()
  {
    return numero;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumero(int newNumero)
  {
    int oldNumero = numero;
    numero = newNumero;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.CHOIX__NUMERO, oldNumero, numero));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReponse()
  {
    return reponse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReponse(String newReponse)
  {
    String oldReponse = reponse;
    reponse = newReponse;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.CHOIX__REPONSE, oldReponse, reponse));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Integer> getQte()
  {
    if (qte == null)
    {
      qte = new EDataTypeEList<Integer>(Integer.class, this, GamePackage.CHOIX__QTE);
    }
    return qte;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Avantage> getAvantage()
  {
    if (avantage == null)
    {
      avantage = new EObjectResolvingEList<Avantage>(Avantage.class, this, GamePackage.CHOIX__AVANTAGE);
    }
    return avantage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.CHOIX__NUMERO:
        return getNumero();
      case GamePackage.CHOIX__REPONSE:
        return getReponse();
      case GamePackage.CHOIX__QTE:
        return getQte();
      case GamePackage.CHOIX__AVANTAGE:
        return getAvantage();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.CHOIX__NUMERO:
        setNumero((Integer)newValue);
        return;
      case GamePackage.CHOIX__REPONSE:
        setReponse((String)newValue);
        return;
      case GamePackage.CHOIX__QTE:
        getQte().clear();
        getQte().addAll((Collection<? extends Integer>)newValue);
        return;
      case GamePackage.CHOIX__AVANTAGE:
        getAvantage().clear();
        getAvantage().addAll((Collection<? extends Avantage>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.CHOIX__NUMERO:
        setNumero(NUMERO_EDEFAULT);
        return;
      case GamePackage.CHOIX__REPONSE:
        setReponse(REPONSE_EDEFAULT);
        return;
      case GamePackage.CHOIX__QTE:
        getQte().clear();
        return;
      case GamePackage.CHOIX__AVANTAGE:
        getAvantage().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.CHOIX__NUMERO:
        return numero != NUMERO_EDEFAULT;
      case GamePackage.CHOIX__REPONSE:
        return REPONSE_EDEFAULT == null ? reponse != null : !REPONSE_EDEFAULT.equals(reponse);
      case GamePackage.CHOIX__QTE:
        return qte != null && !qte.isEmpty();
      case GamePackage.CHOIX__AVANTAGE:
        return avantage != null && !avantage.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (numero: ");
    result.append(numero);
    result.append(", reponse: ");
    result.append(reponse);
    result.append(", qte: ");
    result.append(qte);
    result.append(')');
    return result.toString();
  }

} //ChoixImpl
