/**
 * generated by Xtext 2.23.0
 */
package game.game.impl;

import game.game.Connaissance;
import game.game.Explorateur;
import game.game.GamePackage;
import game.game.Objet;
import game.game.Place;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Explorateur</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link game.game.impl.ExplorateurImpl#getPlace <em>Place</em>}</li>
 *   <li>{@link game.game.impl.ExplorateurImpl#getTailleDispo <em>Taille Dispo</em>}</li>
 *   <li>{@link game.game.impl.ExplorateurImpl#getObjets <em>Objets</em>}</li>
 *   <li>{@link game.game.impl.ExplorateurImpl#getConnaissances <em>Connaissances</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExplorateurImpl extends MinimalEObjectImpl.Container implements Explorateur
{
  /**
	 * The cached value of the '{@link #getPlace() <em>Place</em>}' reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getPlace()
	 * @generated
	 * @ordered
	 */
  protected Place place;

  /**
	 * The default value of the '{@link #getTailleDispo() <em>Taille Dispo</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getTailleDispo()
	 * @generated
	 * @ordered
	 */
  protected static final int TAILLE_DISPO_EDEFAULT = 0;

  /**
	 * The cached value of the '{@link #getTailleDispo() <em>Taille Dispo</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getTailleDispo()
	 * @generated
	 * @ordered
	 */
  protected int tailleDispo = TAILLE_DISPO_EDEFAULT;

  /**
	 * The cached value of the '{@link #getObjets() <em>Objets</em>}' containment reference list.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getObjets()
	 * @generated
	 * @ordered
	 */
  protected EList<Objet> objets;

  /**
	 * The cached value of the '{@link #getConnaissances() <em>Connaissances</em>}' containment reference list.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getConnaissances()
	 * @generated
	 * @ordered
	 */
  protected EList<Connaissance> connaissances;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ExplorateurImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return GamePackage.Literals.EXPLORATEUR;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Place getPlace()
  {
		if (place != null && place.eIsProxy()) {
			InternalEObject oldPlace = (InternalEObject)place;
			place = (Place)eResolveProxy(oldPlace);
			if (place != oldPlace) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GamePackage.EXPLORATEUR__PLACE, oldPlace, place));
			}
		}
		return place;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public Place basicGetPlace()
  {
		return place;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setPlace(Place newPlace)
  {
		Place oldPlace = place;
		place = newPlace;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.EXPLORATEUR__PLACE, oldPlace, place));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public int getTailleDispo()
  {
		return tailleDispo;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setTailleDispo(int newTailleDispo)
  {
		int oldTailleDispo = tailleDispo;
		tailleDispo = newTailleDispo;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.EXPLORATEUR__TAILLE_DISPO, oldTailleDispo, tailleDispo));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public EList<Objet> getObjets()
  {
		if (objets == null) {
			objets = new EObjectContainmentEList<Objet>(Objet.class, this, GamePackage.EXPLORATEUR__OBJETS);
		}
		return objets;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public EList<Connaissance> getConnaissances()
  {
		if (connaissances == null) {
			connaissances = new EObjectContainmentEList<Connaissance>(Connaissance.class, this, GamePackage.EXPLORATEUR__CONNAISSANCES);
		}
		return connaissances;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case GamePackage.EXPLORATEUR__OBJETS:
				return ((InternalEList<?>)getObjets()).basicRemove(otherEnd, msgs);
			case GamePackage.EXPLORATEUR__CONNAISSANCES:
				return ((InternalEList<?>)getConnaissances()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case GamePackage.EXPLORATEUR__PLACE:
				if (resolve) return getPlace();
				return basicGetPlace();
			case GamePackage.EXPLORATEUR__TAILLE_DISPO:
				return getTailleDispo();
			case GamePackage.EXPLORATEUR__OBJETS:
				return getObjets();
			case GamePackage.EXPLORATEUR__CONNAISSANCES:
				return getConnaissances();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case GamePackage.EXPLORATEUR__PLACE:
				setPlace((Place)newValue);
				return;
			case GamePackage.EXPLORATEUR__TAILLE_DISPO:
				setTailleDispo((Integer)newValue);
				return;
			case GamePackage.EXPLORATEUR__OBJETS:
				getObjets().clear();
				getObjets().addAll((Collection<? extends Objet>)newValue);
				return;
			case GamePackage.EXPLORATEUR__CONNAISSANCES:
				getConnaissances().clear();
				getConnaissances().addAll((Collection<? extends Connaissance>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case GamePackage.EXPLORATEUR__PLACE:
				setPlace((Place)null);
				return;
			case GamePackage.EXPLORATEUR__TAILLE_DISPO:
				setTailleDispo(TAILLE_DISPO_EDEFAULT);
				return;
			case GamePackage.EXPLORATEUR__OBJETS:
				getObjets().clear();
				return;
			case GamePackage.EXPLORATEUR__CONNAISSANCES:
				getConnaissances().clear();
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case GamePackage.EXPLORATEUR__PLACE:
				return place != null;
			case GamePackage.EXPLORATEUR__TAILLE_DISPO:
				return tailleDispo != TAILLE_DISPO_EDEFAULT;
			case GamePackage.EXPLORATEUR__OBJETS:
				return objets != null && !objets.isEmpty();
			case GamePackage.EXPLORATEUR__CONNAISSANCES:
				return connaissances != null && !connaissances.isEmpty();
		}
		return super.eIsSet(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String toString()
  {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (tailleDispo: ");
		result.append(tailleDispo);
		result.append(')');
		return result.toString();
	}

} //ExplorateurImpl
