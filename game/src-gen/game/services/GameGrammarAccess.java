/*
 * generated by Xtext 2.23.0
 */
package game.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GameGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class JeuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Jeu");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJeuKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNomAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNomIDTerminalRuleCall_1_0 = (RuleCall)cNomAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTerritoireAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTerritoireTerritoireParserRuleCall_3_0 = (RuleCall)cTerritoireAssignment_3.eContents().get(0);
		private final Assignment cExplorateurAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cExplorateurExplorateurParserRuleCall_4_0 = (RuleCall)cExplorateurAssignment_4.eContents().get(0);
		private final Assignment cElementsjeuAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cElementsjeuElementsJeuParserRuleCall_5_0 = (RuleCall)cElementsjeuAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Jeu:
		//	'jeu' nom=ID '{'
		//	territoire=Territoire
		//	explorateur=Explorateur
		//	elementsjeu+=ElementsJeu*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'jeu' nom=ID '{' territoire=Territoire explorateur=Explorateur elementsjeu+=ElementsJeu* '}'
		public Group getGroup() { return cGroup; }
		
		//'jeu'
		public Keyword getJeuKeyword_0() { return cJeuKeyword_0; }
		
		//nom=ID
		public Assignment getNomAssignment_1() { return cNomAssignment_1; }
		
		//ID
		public RuleCall getNomIDTerminalRuleCall_1_0() { return cNomIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//territoire=Territoire
		public Assignment getTerritoireAssignment_3() { return cTerritoireAssignment_3; }
		
		//Territoire
		public RuleCall getTerritoireTerritoireParserRuleCall_3_0() { return cTerritoireTerritoireParserRuleCall_3_0; }
		
		//explorateur=Explorateur
		public Assignment getExplorateurAssignment_4() { return cExplorateurAssignment_4; }
		
		//Explorateur
		public RuleCall getExplorateurExplorateurParserRuleCall_4_0() { return cExplorateurExplorateurParserRuleCall_4_0; }
		
		//elementsjeu+=ElementsJeu*
		public Assignment getElementsjeuAssignment_5() { return cElementsjeuAssignment_5; }
		
		//ElementsJeu
		public RuleCall getElementsjeuElementsJeuParserRuleCall_5_0() { return cElementsjeuElementsJeuParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ElementsJeuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.ElementsJeu");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPersonneParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAvantageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPlaceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ElementsJeu:
		//	Personne | Avantage | Place;
		@Override public ParserRule getRule() { return rule; }
		
		//Personne | Avantage | Place
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Personne
		public RuleCall getPersonneParserRuleCall_0() { return cPersonneParserRuleCall_0; }
		
		//Avantage
		public RuleCall getAvantageParserRuleCall_1() { return cAvantageParserRuleCall_1; }
		
		//Place
		public RuleCall getPlaceParserRuleCall_2() { return cPlaceParserRuleCall_2; }
	}
	public class PlaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Place");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLieuParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCheminParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Place:
		//	Lieu | Chemin;
		@Override public ParserRule getRule() { return rule; }
		
		//Lieu | Chemin
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Lieu
		public RuleCall getLieuParserRuleCall_0() { return cLieuParserRuleCall_0; }
		
		//Chemin
		public RuleCall getCheminParserRuleCall_1() { return cCheminParserRuleCall_1; }
	}
	public class AvantageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Avantage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConnaissanceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cObjetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Avantage:
		//	Connaissance | Objet;
		@Override public ParserRule getRule() { return rule; }
		
		//Connaissance | Objet
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Connaissance
		public RuleCall getConnaissanceParserRuleCall_0() { return cConnaissanceParserRuleCall_0; }
		
		//Objet
		public RuleCall getObjetParserRuleCall_1() { return cObjetParserRuleCall_1; }
	}
	public class TerritoireElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Territoire");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTerritoireKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPlacesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPlacesPlaceParserRuleCall_2_0 = (RuleCall)cPlacesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Territoire:
		//	'territoire' '{'
		//	places+=Place+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'territoire' '{' places+=Place+ '}'
		public Group getGroup() { return cGroup; }
		
		//'territoire'
		public Keyword getTerritoireKeyword_0() { return cTerritoireKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//places+=Place+
		public Assignment getPlacesAssignment_2() { return cPlacesAssignment_2; }
		
		//Place
		public RuleCall getPlacesPlaceParserRuleCall_2_0() { return cPlacesPlaceParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class LieuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Lieu");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLieuKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNomAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNomIDTerminalRuleCall_1_0 = (RuleCall)cNomAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNatureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNatureNatureEnumRuleCall_3_0 = (RuleCall)cNatureAssignment_3.eContents().get(0);
		
		//Lieu:
		//	'lieu' nom=ID ':' nature=Nature;
		@Override public ParserRule getRule() { return rule; }
		
		//'lieu' nom=ID ':' nature=Nature
		public Group getGroup() { return cGroup; }
		
		//'lieu'
		public Keyword getLieuKeyword_0() { return cLieuKeyword_0; }
		
		//nom=ID
		public Assignment getNomAssignment_1() { return cNomAssignment_1; }
		
		//ID
		public RuleCall getNomIDTerminalRuleCall_1_0() { return cNomIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//nature=Nature
		public Assignment getNatureAssignment_3() { return cNatureAssignment_3; }
		
		//Nature
		public RuleCall getNatureNatureEnumRuleCall_3_0() { return cNatureNatureEnumRuleCall_3_0; }
	}
	public class CheminElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Chemin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCheminKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPredAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cPredLieuCrossReference_3_0 = (CrossReference)cPredAssignment_3.eContents().get(0);
		private final RuleCall cPredLieuIDTerminalRuleCall_3_0_1 = (RuleCall)cPredLieuCrossReference_3_0.eContents().get(1);
		private final Keyword cVersKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSuccAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSuccLieuCrossReference_5_0 = (CrossReference)cSuccAssignment_5.eContents().get(0);
		private final RuleCall cSuccLieuIDTerminalRuleCall_5_0_1 = (RuleCall)cSuccLieuCrossReference_5_0.eContents().get(1);
		private final Keyword cVisibleKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cVisibleAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cVisibleBOOLTerminalRuleCall_7_0 = (RuleCall)cVisibleAssignment_7.eContents().get(0);
		private final Keyword cObligatoireKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cObligatoireAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cObligatoireBOOLTerminalRuleCall_9_0 = (RuleCall)cObligatoireAssignment_9.eContents().get(0);
		private final Keyword cOuvertKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cOuvertAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cOuvertBOOLTerminalRuleCall_11_0 = (RuleCall)cOuvertAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Chemin:
		//	'chemin' '{'
		//	'de' pred=[Lieu]
		//	'vers' succ=[Lieu]
		//	'visible' visible=BOOL
		//	'obligatoire' obligatoire=BOOL
		//	'ouvert' ouvert=BOOL
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'chemin' '{' 'de' pred=[Lieu] 'vers' succ=[Lieu] 'visible' visible=BOOL 'obligatoire' obligatoire=BOOL 'ouvert'
		//ouvert=BOOL '}'
		public Group getGroup() { return cGroup; }
		
		//'chemin'
		public Keyword getCheminKeyword_0() { return cCheminKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'de'
		public Keyword getDeKeyword_2() { return cDeKeyword_2; }
		
		//pred=[Lieu]
		public Assignment getPredAssignment_3() { return cPredAssignment_3; }
		
		//[Lieu]
		public CrossReference getPredLieuCrossReference_3_0() { return cPredLieuCrossReference_3_0; }
		
		//ID
		public RuleCall getPredLieuIDTerminalRuleCall_3_0_1() { return cPredLieuIDTerminalRuleCall_3_0_1; }
		
		//'vers'
		public Keyword getVersKeyword_4() { return cVersKeyword_4; }
		
		//succ=[Lieu]
		public Assignment getSuccAssignment_5() { return cSuccAssignment_5; }
		
		//[Lieu]
		public CrossReference getSuccLieuCrossReference_5_0() { return cSuccLieuCrossReference_5_0; }
		
		//ID
		public RuleCall getSuccLieuIDTerminalRuleCall_5_0_1() { return cSuccLieuIDTerminalRuleCall_5_0_1; }
		
		//'visible'
		public Keyword getVisibleKeyword_6() { return cVisibleKeyword_6; }
		
		//visible=BOOL
		public Assignment getVisibleAssignment_7() { return cVisibleAssignment_7; }
		
		//BOOL
		public RuleCall getVisibleBOOLTerminalRuleCall_7_0() { return cVisibleBOOLTerminalRuleCall_7_0; }
		
		//'obligatoire'
		public Keyword getObligatoireKeyword_8() { return cObligatoireKeyword_8; }
		
		//obligatoire=BOOL
		public Assignment getObligatoireAssignment_9() { return cObligatoireAssignment_9; }
		
		//BOOL
		public RuleCall getObligatoireBOOLTerminalRuleCall_9_0() { return cObligatoireBOOLTerminalRuleCall_9_0; }
		
		//'ouvert'
		public Keyword getOuvertKeyword_10() { return cOuvertKeyword_10; }
		
		//ouvert=BOOL
		public Assignment getOuvertAssignment_11() { return cOuvertAssignment_11; }
		
		//BOOL
		public RuleCall getOuvertBOOLTerminalRuleCall_11_0() { return cOuvertBOOLTerminalRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class PersonneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Personne");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPersonneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNomAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNomIDTerminalRuleCall_1_0 = (RuleCall)cNomAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cVisibleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVisibleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVisibleBOOLTerminalRuleCall_4_0 = (RuleCall)cVisibleAssignment_4.eContents().get(0);
		private final Keyword cActifKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cActifAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cActifBOOLTerminalRuleCall_6_0 = (RuleCall)cActifAssignment_6.eContents().get(0);
		private final Keyword cObligatoireKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cObligatoireAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cObligatoireBOOLTerminalRuleCall_8_0 = (RuleCall)cObligatoireAssignment_8.eContents().get(0);
		private final Keyword cInteractionsKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cInteractionsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cInteractionsInteractionParserRuleCall_10_0 = (RuleCall)cInteractionsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Personne:
		//	'personne' nom=ID '{'
		//	'visible' visible=BOOL
		//	'actif' actif=BOOL
		//	'obligatoire' obligatoire=BOOL
		//	'interactions' interactions+=Interaction*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'personne' nom=ID '{' 'visible' visible=BOOL 'actif' actif=BOOL 'obligatoire' obligatoire=BOOL 'interactions'
		//interactions+=Interaction* '}'
		public Group getGroup() { return cGroup; }
		
		//'personne'
		public Keyword getPersonneKeyword_0() { return cPersonneKeyword_0; }
		
		//nom=ID
		public Assignment getNomAssignment_1() { return cNomAssignment_1; }
		
		//ID
		public RuleCall getNomIDTerminalRuleCall_1_0() { return cNomIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'visible'
		public Keyword getVisibleKeyword_3() { return cVisibleKeyword_3; }
		
		//visible=BOOL
		public Assignment getVisibleAssignment_4() { return cVisibleAssignment_4; }
		
		//BOOL
		public RuleCall getVisibleBOOLTerminalRuleCall_4_0() { return cVisibleBOOLTerminalRuleCall_4_0; }
		
		//'actif'
		public Keyword getActifKeyword_5() { return cActifKeyword_5; }
		
		//actif=BOOL
		public Assignment getActifAssignment_6() { return cActifAssignment_6; }
		
		//BOOL
		public RuleCall getActifBOOLTerminalRuleCall_6_0() { return cActifBOOLTerminalRuleCall_6_0; }
		
		//'obligatoire'
		public Keyword getObligatoireKeyword_7() { return cObligatoireKeyword_7; }
		
		//obligatoire=BOOL
		public Assignment getObligatoireAssignment_8() { return cObligatoireAssignment_8; }
		
		//BOOL
		public RuleCall getObligatoireBOOLTerminalRuleCall_8_0() { return cObligatoireBOOLTerminalRuleCall_8_0; }
		
		//'interactions'
		public Keyword getInteractionsKeyword_9() { return cInteractionsKeyword_9; }
		
		//interactions+=Interaction*
		public Assignment getInteractionsAssignment_10() { return cInteractionsAssignment_10; }
		
		//Interaction
		public RuleCall getInteractionsInteractionParserRuleCall_10_0() { return cInteractionsInteractionParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ExplorateurElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Explorateur");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExplorateurKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLocalisationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPlaceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPlacePlaceParserRuleCall_3_0 = (RuleCall)cPlaceAssignment_3.eContents().get(0);
		private final Keyword cTailleKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cDisponibleKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTailleDispoAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTailleDispoINTTerminalRuleCall_6_0 = (RuleCall)cTailleDispoAssignment_6.eContents().get(0);
		private final Keyword cObjetsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cPossedesKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cObjetsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cObjetsObjetParserRuleCall_9_0 = (RuleCall)cObjetsAssignment_9.eContents().get(0);
		private final Keyword cConnaissancesKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cPossedesKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cConnaissancesAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cConnaissancesConnaissanceParserRuleCall_12_0 = (RuleCall)cConnaissancesAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Explorateur:
		//	'explorateur' '{'
		//	'localisation' place=Place
		//	'taille' 'disponible' tailleDispo=INT
		//	'objets' 'possedes' objets=Objet*
		//	'connaissances' 'possedes' connaissances=Connaissance*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'explorateur' '{' 'localisation' place=Place 'taille' 'disponible' tailleDispo=INT 'objets' 'possedes' objets=Objet*
		//'connaissances' 'possedes' connaissances=Connaissance* '}'
		public Group getGroup() { return cGroup; }
		
		//'explorateur'
		public Keyword getExplorateurKeyword_0() { return cExplorateurKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'localisation'
		public Keyword getLocalisationKeyword_2() { return cLocalisationKeyword_2; }
		
		//place=Place
		public Assignment getPlaceAssignment_3() { return cPlaceAssignment_3; }
		
		//Place
		public RuleCall getPlacePlaceParserRuleCall_3_0() { return cPlacePlaceParserRuleCall_3_0; }
		
		//'taille'
		public Keyword getTailleKeyword_4() { return cTailleKeyword_4; }
		
		//'disponible'
		public Keyword getDisponibleKeyword_5() { return cDisponibleKeyword_5; }
		
		//tailleDispo=INT
		public Assignment getTailleDispoAssignment_6() { return cTailleDispoAssignment_6; }
		
		//INT
		public RuleCall getTailleDispoINTTerminalRuleCall_6_0() { return cTailleDispoINTTerminalRuleCall_6_0; }
		
		//'objets'
		public Keyword getObjetsKeyword_7() { return cObjetsKeyword_7; }
		
		//'possedes'
		public Keyword getPossedesKeyword_8() { return cPossedesKeyword_8; }
		
		//objets=Objet*
		public Assignment getObjetsAssignment_9() { return cObjetsAssignment_9; }
		
		//Objet
		public RuleCall getObjetsObjetParserRuleCall_9_0() { return cObjetsObjetParserRuleCall_9_0; }
		
		//'connaissances'
		public Keyword getConnaissancesKeyword_10() { return cConnaissancesKeyword_10; }
		
		//'possedes'
		public Keyword getPossedesKeyword_11() { return cPossedesKeyword_11; }
		
		//connaissances=Connaissance*
		public Assignment getConnaissancesAssignment_12() { return cConnaissancesAssignment_12; }
		
		//Connaissance
		public RuleCall getConnaissancesConnaissanceParserRuleCall_12_0() { return cConnaissancesConnaissanceParserRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class ConnaissanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Connaissance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnaissanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cVisibleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVisibleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVisibleBOOLTerminalRuleCall_3_0 = (RuleCall)cVisibleAssignment_3.eContents().get(0);
		private final Keyword cActifKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cActifAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cActifBOOLTerminalRuleCall_5_0 = (RuleCall)cActifAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Connaissance:
		//	'connaissance' '{'
		//	'visible' visible=BOOL
		//	'actif' actif=BOOL
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'connaissance' '{' 'visible' visible=BOOL 'actif' actif=BOOL '}'
		public Group getGroup() { return cGroup; }
		
		//'connaissance'
		public Keyword getConnaissanceKeyword_0() { return cConnaissanceKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'visible'
		public Keyword getVisibleKeyword_2() { return cVisibleKeyword_2; }
		
		//visible=BOOL
		public Assignment getVisibleAssignment_3() { return cVisibleAssignment_3; }
		
		//BOOL
		public RuleCall getVisibleBOOLTerminalRuleCall_3_0() { return cVisibleBOOLTerminalRuleCall_3_0; }
		
		//'actif'
		public Keyword getActifKeyword_4() { return cActifKeyword_4; }
		
		//actif=BOOL
		public Assignment getActifAssignment_5() { return cActifAssignment_5; }
		
		//BOOL
		public RuleCall getActifBOOLTerminalRuleCall_5_0() { return cActifBOOLTerminalRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ObjetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Objet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cVisibleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVisibleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVisibleBOOLTerminalRuleCall_3_0 = (RuleCall)cVisibleAssignment_3.eContents().get(0);
		private final Keyword cActifKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cActifAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cActifBOOLTerminalRuleCall_5_0 = (RuleCall)cActifAssignment_5.eContents().get(0);
		private final Keyword cQuantiteKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cQteAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cQteINTTerminalRuleCall_7_0 = (RuleCall)cQteAssignment_7.eContents().get(0);
		private final Keyword cTailleKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cTailleAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cTailleINTTerminalRuleCall_9_0 = (RuleCall)cTailleAssignment_9.eContents().get(0);
		private final Keyword cTransformableKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cTransformableAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cTransformableBOOLTerminalRuleCall_11_0 = (RuleCall)cTransformableAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Objet:
		//	'objet' '{'
		//	'visible' visible=BOOL
		//	'actif' actif=BOOL
		//	'quantite' qte=INT
		//	'taille' taille=INT
		//	'transformable' transformable=BOOL
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'objet' '{' 'visible' visible=BOOL 'actif' actif=BOOL 'quantite' qte=INT 'taille' taille=INT 'transformable'
		//transformable=BOOL '}'
		public Group getGroup() { return cGroup; }
		
		//'objet'
		public Keyword getObjetKeyword_0() { return cObjetKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'visible'
		public Keyword getVisibleKeyword_2() { return cVisibleKeyword_2; }
		
		//visible=BOOL
		public Assignment getVisibleAssignment_3() { return cVisibleAssignment_3; }
		
		//BOOL
		public RuleCall getVisibleBOOLTerminalRuleCall_3_0() { return cVisibleBOOLTerminalRuleCall_3_0; }
		
		//'actif'
		public Keyword getActifKeyword_4() { return cActifKeyword_4; }
		
		//actif=BOOL
		public Assignment getActifAssignment_5() { return cActifAssignment_5; }
		
		//BOOL
		public RuleCall getActifBOOLTerminalRuleCall_5_0() { return cActifBOOLTerminalRuleCall_5_0; }
		
		//'quantite'
		public Keyword getQuantiteKeyword_6() { return cQuantiteKeyword_6; }
		
		//qte=INT
		public Assignment getQteAssignment_7() { return cQteAssignment_7; }
		
		//INT
		public RuleCall getQteINTTerminalRuleCall_7_0() { return cQteINTTerminalRuleCall_7_0; }
		
		//'taille'
		public Keyword getTailleKeyword_8() { return cTailleKeyword_8; }
		
		//taille=INT
		public Assignment getTailleAssignment_9() { return cTailleAssignment_9; }
		
		//INT
		public RuleCall getTailleINTTerminalRuleCall_9_0() { return cTailleINTTerminalRuleCall_9_0; }
		
		//'transformable'
		public Keyword getTransformableKeyword_10() { return cTransformableKeyword_10; }
		
		//transformable=BOOL
		public Assignment getTransformableAssignment_11() { return cTransformableAssignment_11; }
		
		//BOOL
		public RuleCall getTransformableBOOLTerminalRuleCall_11_0() { return cTransformableBOOLTerminalRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class InteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Interaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInteractionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cQuestionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQuestionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQuestionSTRINGTerminalRuleCall_3_0 = (RuleCall)cQuestionAssignment_3.eContents().get(0);
		private final Keyword cChoixKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cChoixAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cChoixChoixParserRuleCall_5_0 = (RuleCall)cChoixAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Interaction:
		//	'interaction' '{'
		//	'question' question=STRING
		//	'choix' choix+=Choix+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'interaction' '{' 'question' question=STRING 'choix' choix+=Choix+ '}'
		public Group getGroup() { return cGroup; }
		
		//'interaction'
		public Keyword getInteractionKeyword_0() { return cInteractionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'question'
		public Keyword getQuestionKeyword_2() { return cQuestionKeyword_2; }
		
		//question=STRING
		public Assignment getQuestionAssignment_3() { return cQuestionAssignment_3; }
		
		//STRING
		public RuleCall getQuestionSTRINGTerminalRuleCall_3_0() { return cQuestionSTRINGTerminalRuleCall_3_0; }
		
		//'choix'
		public Keyword getChoixKeyword_4() { return cChoixKeyword_4; }
		
		//choix+=Choix+
		public Assignment getChoixAssignment_5() { return cChoixAssignment_5; }
		
		//Choix
		public RuleCall getChoixChoixParserRuleCall_5_0() { return cChoixChoixParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ChoixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Choix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNumeroAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNumeroINTTerminalRuleCall_1_0 = (RuleCall)cNumeroAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cReponseKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReponseAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReponseSTRINGTerminalRuleCall_4_0 = (RuleCall)cReponseAssignment_4.eContents().get(0);
		private final Keyword cRecompenseKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRecompenseAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRecompenseRecompenseParserRuleCall_6_0 = (RuleCall)cRecompenseAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Choix:
		//	'choix' numero=INT '{'
		//	'reponse' reponse=STRING
		//	'recompense' recompense=Recompense
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'choix' numero=INT '{' 'reponse' reponse=STRING 'recompense' recompense=Recompense '}'
		public Group getGroup() { return cGroup; }
		
		//'choix'
		public Keyword getChoixKeyword_0() { return cChoixKeyword_0; }
		
		//numero=INT
		public Assignment getNumeroAssignment_1() { return cNumeroAssignment_1; }
		
		//INT
		public RuleCall getNumeroINTTerminalRuleCall_1_0() { return cNumeroINTTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'reponse'
		public Keyword getReponseKeyword_3() { return cReponseKeyword_3; }
		
		//reponse=STRING
		public Assignment getReponseAssignment_4() { return cReponseAssignment_4; }
		
		//STRING
		public RuleCall getReponseSTRINGTerminalRuleCall_4_0() { return cReponseSTRINGTerminalRuleCall_4_0; }
		
		//'recompense'
		public Keyword getRecompenseKeyword_5() { return cRecompenseKeyword_5; }
		
		//recompense=Recompense
		public Assignment getRecompenseAssignment_6() { return cRecompenseAssignment_6; }
		
		//Recompense
		public RuleCall getRecompenseRecompenseParserRuleCall_6_0() { return cRecompenseRecompenseParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Condition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConditionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cConnaissancesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRequisesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cConnaissancesRequisesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConnaissancesRequisesConnaissanceParserRuleCall_4_0 = (RuleCall)cConnaissancesRequisesAssignment_4.eContents().get(0);
		private final Keyword cObjetsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRequisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cObjetsRequisAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cObjetsRequisObjetParserRuleCall_7_0 = (RuleCall)cObjetsRequisAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Condition:
		//	'condition' '{'
		//	'connaissances' 'requises' connaissancesRequises+=Connaissance*
		//	'objets' 'requis' objetsRequis+=Objet*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'condition' '{' 'connaissances' 'requises' connaissancesRequises+=Connaissance* 'objets' 'requis' objetsRequis+=Objet*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'condition'
		public Keyword getConditionKeyword_0() { return cConditionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'connaissances'
		public Keyword getConnaissancesKeyword_2() { return cConnaissancesKeyword_2; }
		
		//'requises'
		public Keyword getRequisesKeyword_3() { return cRequisesKeyword_3; }
		
		//connaissancesRequises+=Connaissance*
		public Assignment getConnaissancesRequisesAssignment_4() { return cConnaissancesRequisesAssignment_4; }
		
		//Connaissance
		public RuleCall getConnaissancesRequisesConnaissanceParserRuleCall_4_0() { return cConnaissancesRequisesConnaissanceParserRuleCall_4_0; }
		
		//'objets'
		public Keyword getObjetsKeyword_5() { return cObjetsKeyword_5; }
		
		//'requis'
		public Keyword getRequisKeyword_6() { return cRequisKeyword_6; }
		
		//objetsRequis+=Objet*
		public Assignment getObjetsRequisAssignment_7() { return cObjetsRequisAssignment_7; }
		
		//Objet
		public RuleCall getObjetsRequisObjetParserRuleCall_7_0() { return cObjetsRequisObjetParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class RecompenseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Recompense");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRecompenseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAvantageKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAvantageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAvantageAvantageParserRuleCall_3_0 = (RuleCall)cAvantageAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Recompense:
		//	'recompense' '{'
		//	'avantage' avantage+=Avantage*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'recompense' '{' 'avantage' avantage+=Avantage* '}'
		public Group getGroup() { return cGroup; }
		
		//'recompense'
		public Keyword getRecompenseKeyword_0() { return cRecompenseKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'avantage'
		public Keyword getAvantageKeyword_2() { return cAvantageKeyword_2; }
		
		//avantage+=Avantage*
		public Assignment getAvantageAssignment_3() { return cAvantageAssignment_3; }
		
		//Avantage
		public RuleCall getAvantageAvantageParserRuleCall_3_0() { return cAvantageAvantageParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	public class NatureElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.Nature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDepartEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDepartDepartKeyword_0_0 = (Keyword)cDepartEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFinEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFinFinKeyword_1_0 = (Keyword)cFinEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInterEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInterIntermediaireKeyword_2_0 = (Keyword)cInterEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Nature:
		//	depart | fin | inter='intermediaire';
		public EnumRule getRule() { return rule; }
		
		//depart | fin | inter='intermediaire'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//depart
		public EnumLiteralDeclaration getDepartEnumLiteralDeclaration_0() { return cDepartEnumLiteralDeclaration_0; }
		
		//'depart'
		public Keyword getDepartDepartKeyword_0_0() { return cDepartDepartKeyword_0_0; }
		
		//fin
		public EnumLiteralDeclaration getFinEnumLiteralDeclaration_1() { return cFinEnumLiteralDeclaration_1; }
		
		//'fin'
		public Keyword getFinFinKeyword_1_0() { return cFinFinKeyword_1_0; }
		
		//inter='intermediaire'
		public EnumLiteralDeclaration getInterEnumLiteralDeclaration_2() { return cInterEnumLiteralDeclaration_2; }
		
		//'intermediaire'
		public Keyword getInterIntermediaireKeyword_2_0() { return cInterIntermediaireKeyword_2_0; }
	}
	
	private final JeuElements pJeu;
	private final NatureElements eNature;
	private final TerminalRule tBOOL;
	private final ElementsJeuElements pElementsJeu;
	private final PlaceElements pPlace;
	private final AvantageElements pAvantage;
	private final TerritoireElements pTerritoire;
	private final LieuElements pLieu;
	private final CheminElements pChemin;
	private final PersonneElements pPersonne;
	private final ExplorateurElements pExplorateur;
	private final ConnaissanceElements pConnaissance;
	private final ObjetElements pObjet;
	private final InteractionElements pInteraction;
	private final ChoixElements pChoix;
	private final ConditionElements pCondition;
	private final RecompenseElements pRecompense;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GameGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pJeu = new JeuElements();
		this.eNature = new NatureElements();
		this.tBOOL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "game.Game.BOOL");
		this.pElementsJeu = new ElementsJeuElements();
		this.pPlace = new PlaceElements();
		this.pAvantage = new AvantageElements();
		this.pTerritoire = new TerritoireElements();
		this.pLieu = new LieuElements();
		this.pChemin = new CheminElements();
		this.pPersonne = new PersonneElements();
		this.pExplorateur = new ExplorateurElements();
		this.pConnaissance = new ConnaissanceElements();
		this.pObjet = new ObjetElements();
		this.pInteraction = new InteractionElements();
		this.pChoix = new ChoixElements();
		this.pCondition = new ConditionElements();
		this.pRecompense = new RecompenseElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("game.Game".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Jeu:
	//	'jeu' nom=ID '{'
	//	territoire=Territoire
	//	explorateur=Explorateur
	//	elementsjeu+=ElementsJeu*
	//	'}';
	public JeuElements getJeuAccess() {
		return pJeu;
	}
	
	public ParserRule getJeuRule() {
		return getJeuAccess().getRule();
	}
	
	//enum Nature:
	//	depart | fin | inter='intermediaire';
	public NatureElements getNatureAccess() {
		return eNature;
	}
	
	public EnumRule getNatureRule() {
		return getNatureAccess().getRule();
	}
	
	//terminal BOOL returns ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLRule() {
		return tBOOL;
	}
	
	//ElementsJeu:
	//	Personne | Avantage | Place;
	public ElementsJeuElements getElementsJeuAccess() {
		return pElementsJeu;
	}
	
	public ParserRule getElementsJeuRule() {
		return getElementsJeuAccess().getRule();
	}
	
	//Place:
	//	Lieu | Chemin;
	public PlaceElements getPlaceAccess() {
		return pPlace;
	}
	
	public ParserRule getPlaceRule() {
		return getPlaceAccess().getRule();
	}
	
	//Avantage:
	//	Connaissance | Objet;
	public AvantageElements getAvantageAccess() {
		return pAvantage;
	}
	
	public ParserRule getAvantageRule() {
		return getAvantageAccess().getRule();
	}
	
	//Territoire:
	//	'territoire' '{'
	//	places+=Place+
	//	'}';
	public TerritoireElements getTerritoireAccess() {
		return pTerritoire;
	}
	
	public ParserRule getTerritoireRule() {
		return getTerritoireAccess().getRule();
	}
	
	//Lieu:
	//	'lieu' nom=ID ':' nature=Nature;
	public LieuElements getLieuAccess() {
		return pLieu;
	}
	
	public ParserRule getLieuRule() {
		return getLieuAccess().getRule();
	}
	
	//Chemin:
	//	'chemin' '{'
	//	'de' pred=[Lieu]
	//	'vers' succ=[Lieu]
	//	'visible' visible=BOOL
	//	'obligatoire' obligatoire=BOOL
	//	'ouvert' ouvert=BOOL
	//	'}';
	public CheminElements getCheminAccess() {
		return pChemin;
	}
	
	public ParserRule getCheminRule() {
		return getCheminAccess().getRule();
	}
	
	//Personne:
	//	'personne' nom=ID '{'
	//	'visible' visible=BOOL
	//	'actif' actif=BOOL
	//	'obligatoire' obligatoire=BOOL
	//	'interactions' interactions+=Interaction*
	//	'}';
	public PersonneElements getPersonneAccess() {
		return pPersonne;
	}
	
	public ParserRule getPersonneRule() {
		return getPersonneAccess().getRule();
	}
	
	//Explorateur:
	//	'explorateur' '{'
	//	'localisation' place=Place
	//	'taille' 'disponible' tailleDispo=INT
	//	'objets' 'possedes' objets=Objet*
	//	'connaissances' 'possedes' connaissances=Connaissance*
	//	'}';
	public ExplorateurElements getExplorateurAccess() {
		return pExplorateur;
	}
	
	public ParserRule getExplorateurRule() {
		return getExplorateurAccess().getRule();
	}
	
	//Connaissance:
	//	'connaissance' '{'
	//	'visible' visible=BOOL
	//	'actif' actif=BOOL
	//	'}';
	public ConnaissanceElements getConnaissanceAccess() {
		return pConnaissance;
	}
	
	public ParserRule getConnaissanceRule() {
		return getConnaissanceAccess().getRule();
	}
	
	//Objet:
	//	'objet' '{'
	//	'visible' visible=BOOL
	//	'actif' actif=BOOL
	//	'quantite' qte=INT
	//	'taille' taille=INT
	//	'transformable' transformable=BOOL
	//	'}';
	public ObjetElements getObjetAccess() {
		return pObjet;
	}
	
	public ParserRule getObjetRule() {
		return getObjetAccess().getRule();
	}
	
	//Interaction:
	//	'interaction' '{'
	//	'question' question=STRING
	//	'choix' choix+=Choix+
	//	'}';
	public InteractionElements getInteractionAccess() {
		return pInteraction;
	}
	
	public ParserRule getInteractionRule() {
		return getInteractionAccess().getRule();
	}
	
	//Choix:
	//	'choix' numero=INT '{'
	//	'reponse' reponse=STRING
	//	'recompense' recompense=Recompense
	//	'}';
	public ChoixElements getChoixAccess() {
		return pChoix;
	}
	
	public ParserRule getChoixRule() {
		return getChoixAccess().getRule();
	}
	
	//Condition:
	//	'condition' '{'
	//	'connaissances' 'requises' connaissancesRequises+=Connaissance*
	//	'objets' 'requis' objetsRequis+=Objet*
	//	'}';
	public ConditionElements getConditionAccess() {
		return pCondition;
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//Recompense:
	//	'recompense' '{'
	//	'avantage' avantage+=Avantage*
	//	'}';
	public RecompenseElements getRecompenseAccess() {
		return pRecompense;
	}
	
	public ParserRule getRecompenseRule() {
		return getRecompenseAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
