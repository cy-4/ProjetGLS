// automatically generated by Xtext
grammar game.xtext.Game with org.eclipse.xtext.common.Terminals

import "http://www.Game.game" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Jeu returns Jeu:
	{Jeu}
	'Jeu'
	name=EString
	'{'
		('territoire' territoire=Territoire)?
		('explorateur' explorateur=Explorateur)?
		('elementsjeu' '{' elementsjeu+=ElementsJeu ( "," elementsjeu+=ElementsJeu)* '}' )?
	'}';



ElementsJeu returns ElementsJeu:
	ElementsJeu_Impl | Place_Impl | Avantage_Impl | QteObjet | Lieu | Chemin | Personne | Connaissance | Objet | Interaction | Choix | Condition_Impl | ConditionPersonne | ConditionAvantage | ConditionChemin;

Place returns Place:
	Place_Impl | Lieu | Chemin;











EString returns ecore::EString:
	STRING | ID;

Territoire returns Territoire:
	{Territoire}
	'Territoire'
	'{'
		('places' '{' places+=Place ( "," places+=Place)* '}' )?
	'}';

Explorateur returns Explorateur:
	{Explorateur}
	'Explorateur'
	'{'
		('tailleDispo' tailleDispo=EInt)?
		('place' place=[Place|EString])?
		('objets' '{' objets+=Objet ( "," objets+=Objet)* '}' )?
		('connaissances' '{' connaissances+=Connaissance ( "," connaissances+=Connaissance)* '}' )?
	'}';

ElementsJeu_Impl returns ElementsJeu:
	{ElementsJeu}
	'ElementsJeu'
	name=EString;

Place_Impl returns Place:
	{Place}
	'Place'
	name=EString;

Lieu returns Lieu:
	{Lieu}
	'Lieu'
	name=EString
	'{'
		('nature' nature=Nature)?
		('personnes' '(' personnes+=[Personne|EString] ( "," personnes+=[Personne|EString])* ')' )?
	'}';

Chemin returns Chemin:
	{Chemin}
	(obligatoire?='obligatoire')?
	'Chemin'
	name=EString
	'{'
		('pred' pred=[Lieu|EString])?
		('succ' succ=[Lieu|EString])?
		('visible' '{' visible+=ConditionChemin ( "," visible+=ConditionChemin)* '}' )?
		('ouvert' '{' ouvert+=ConditionChemin ( "," ouvert+=ConditionChemin)* '}' )?
	'}';

enum Nature returns Nature:
				depart = 'depart' | fin = 'fin' | inter = 'inter';

Personne returns Personne:
	(obligatoire?='obligatoire')?
	'Personne'
	name=EString
	'{'
		'place' place=[Lieu|EString]
		'interactions' '(' interactions+=[Interaction|EString] ( "," interactions+=[Interaction|EString])* ')' 
		('visible' '{' visible+=ConditionPersonne ( "," visible+=ConditionPersonne)* '}' )?
		('active' '{' active+=ConditionPersonne ( "," active+=ConditionPersonne)* '}' )?
	'}';

ConditionPersonne returns ConditionPersonne:
	{ConditionPersonne}
	'ConditionPersonne'
	name=EString
	'{'
		('connaissanceRequise' connaissanceRequise=[Connaissance|EString])?
		('connaissanceInterdite' connaissanceInterdite=[Connaissance|EString])?
		('objetRequis' objetRequis=[Objet|EString])?
		('objetInterdit' objetInterdit=[Objet|EString])?
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

Interaction returns Interaction:
	'Interaction'
	name=EString
	'{'
		('question' question=EString)?
		'personne' personne=[Personne|EString]
		('choix' '(' choix+=[Choix|EString] ( "," choix+=[Choix|EString])* ')' )?
	'}';

Connaissance returns Connaissance:
	{Connaissance}
	'Connaissance'
	name=EString
	'{'
		('choix' choix=[Choix|EString])?
		('visible' '{' visible+=ConditionAvantage ( "," visible+=ConditionAvantage)* '}' )?
		('actif' '{' actif+=ConditionAvantage ( "," actif+=ConditionAvantage)* '}' )?
	'}';

Objet returns Objet:
	{Objet}
	(transformable?='transformable')?
	'Objet'
	name=EString
	'{'
		('qte' qte=EInt)?
		('taille' taille=EInt)?
		('visible' '{' visible+=ConditionAvantage ( "," visible+=ConditionAvantage)* '}' )?
		('actif' '{' actif+=ConditionAvantage ( "," actif+=ConditionAvantage)* '}' )?
	'}';

ConditionAvantage returns ConditionAvantage:
	{ConditionAvantage}
	'ConditionAvantage'
	name=EString
	'{'
		('connaissanceRequise' connaissanceRequise=[Connaissance|EString])?
		('connaissanceInterdite' connaissanceInterdite=[Connaissance|EString])?
		('objetRequis' objetRequis=[Objet|EString])?
		('objetInterdit' objetInterdit=[Objet|EString])?
	'}';

Choix returns Choix:
	(bonne?='bonne')?
	'Choix'
	name=EString
	'{'
		('reponse' reponse=EString)?
		('connaisDon' '(' connaisDon+=[Connaissance|EString] ( "," connaisDon+=[Connaissance|EString])* ')' )?
		'interaction' interaction=[Interaction|EString]
		('objetCons' '{' objetCons+=QteObjet ( "," objetCons+=QteObjet)* '}' )?
		('objetDon' '{' objetDon+=QteObjet ( "," objetDon+=QteObjet)* '}' )?
	'}';

QteObjet returns QteObjet:
	{QteObjet}
	'QteObjet'
	name=EString
	'{'
		('qte' qte=EInt)?
		('objet' objet=[Objet|EString])?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

ConditionChemin returns ConditionChemin:
	{ConditionChemin}
	'ConditionChemin'
	name=EString
	'{'
		('connaissanceRequise' connaissanceRequise=[Connaissance|EString])?
		('connaissanceInterdite' connaissanceInterdite=[Connaissance|EString])?
		('objetRequis' objetRequis=[Objet|EString])?
		('objetInterdit' objetInterdit=[Objet|EString])?
	'}';

Avantage_Impl returns Avantage:
	{Avantage}
	'Avantage'
	name=EString
	'{'
		('visible' '{' visible+=ConditionAvantage ( "," visible+=ConditionAvantage)* '}' )?
		('actif' '{' actif+=ConditionAvantage ( "," actif+=ConditionAvantage)* '}' )?
	'}';

Condition_Impl returns Condition:
	{Condition}
	'Condition'
	name=EString
	'{'
		('connaissanceRequise' connaissanceRequise=[Connaissance|EString])?
		('connaissanceInterdite' connaissanceInterdite=[Connaissance|EString])?
		('objetRequis' objetRequis=[Objet|EString])?
		('objetInterdit' objetInterdit=[Objet|EString])?
	'}';
